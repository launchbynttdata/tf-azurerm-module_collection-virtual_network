// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//Variables required by network module
variable "resource_group_name" {
  type        = string
  description = "(Required) The name of the resource group in which to create the virtual network."
}

variable "location" {
  type        = string
  description = "(Required) The location/region where the virtual network is created. Changing this forces a new resource to be created."
}
variable "use_for_each" {
  type        = bool
  default     = true
  description = "(Required)Use `for_each` instead of `count` to create multiple resource instances."
}

variable "address_space" {
  type        = list(string)
  default     = ["10.0.0.0/16"]
  description = "(Optional)The address space that is used by the virtual network."
}

variable "bgp_community" {
  type        = string
  default     = null
  description = "(Optional) The BGP community attribute in format `<as-number>:<community-value>`."
}

variable "ddos_protection_plan" {
  type = object(
    {
      enable = bool
      id     = string
    }
  )
  default     = null
  description = "The set of DDoS protection plan configuration"
}

variable "dns_servers" {
  type        = list(string)
  default     = []
  description = "The DNS servers to be used with vNet."
}

variable "nsg_ids" {
  type        = map(string)
  default     = {}
  description = "A map of subnet name to Network Security Group IDs"
}

variable "route_tables_ids" {
  type        = map(string)
  default     = {}
  description = " A map of subnet name to Route table ids"
}

variable "subnet_delegation" {
  type        = map(map(any))
  default     = {}
  description = "A map of subnet name to delegation block on the subnet"
}

variable "subnet_enforce_private_link_endpoint_network_policies" {
  type        = map(bool)
  default     = {}
  description = "A map of subnet name to enable/disable private link endpoint network policies on the subnet."
}

variable "subnet_enforce_private_link_service_network_policies" {
  type        = map(bool)
  default     = {}
  description = "A map of subnet name to enable/disable private link service network policies on the subnet"
}

variable "subnet_prefixes" {
  type        = list(string)
  description = "(Required) The address prefix to use for the subnet."
}

variable "subnet_service_endpoints" {
  type        = map(list(string))
  default     = {}
  description = "(Optional) A map with key (string) `subnet name`, value (list(string)) to indicate enabled service endpoints on the subnet."
}

variable "tags" {
  type        = map(string)
  default     = { "environment" : "dev" }
  description = "(Optional) The tags to associate with your network and subnets."
}

variable "tracing_tags_enabled" {
  type        = bool
  default     = false
  description = "(Optional) Whether enable tracing tags that generated by BridgeCrew Yor."
}

variable "tracing_tags_prefix" {
  type        = string
  default     = "avm"
  description = "(Optional) Default prefix for generated tracing tags."
}

variable "subnet_names" {
  type        = list(string)
  default     = []
  description = "(Optional) The names of the subnets to be created."
}

variable "vnet_name" {
  type        = string
  description = "Name of the vnet to create"
}
